/*
 * max30003test.h
 *
 * Created: 5/2/2018 3:23:31 PM
 *  Author: dli40
 */ 

#ifndef MAX30003TEST_H
#define MAX30003TEST_H

#ifdef __cplusplus
extern "C"
{
#endif // __cplusplus
#include <stdbool.h>
#include "max30003.h"

typedef enum TEST_RESULT {
    TEST_SUCCESS = 0,
    TEST_FAILURE = 1,
    TEST_CFGFAIL = 2,
    TEST_TIMEOUT = 3,
    TEST_PENDING = 4
} TEST_RESULT;

extern bool FLAG_TIMEOUT;
extern const MAX30003_CNFG_GEN_VALS CNFGGEN_VALS_DEFAULT;
extern const MAX30003_CNFG_ECG_VALS CNFECG_VALS_DEFAULT;
extern const MAX30003_EN_INT_VALS EN_INT_VALS_DEFAULT;
extern const MAX30003_EN_INT_VALS EN_INT2_VALS_DEFAULT;
extern const MAX30003_MNGR_INT_VALS MNGR_INT_VALS_DEFAULT;

TEST_RESULT MAX30003_INIT_TEST();
TEST_RESULT MAX30003_INIT_TEST_ROUND();
TEST_RESULT MAX30003_INIT_SETUP();
TEST_RESULT MAX30003_TEST_TRANS_RATE();
TEST_RESULT MAX30003_TEST_GAIN();
TEST_RESULT MAX30003_TEST_Fre();
TEST_RESULT MAX30003_TEST_HELLO_WORLD();
TEST_RESULT MAX30003_FLAG_TEST();
TEST_RESULT MAX30003_FIFO_TEST();

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* MAX30003TEST_H */

#include "max30003.h"
#include "driver_init.h"
#include "max30003types.h"

//constant setup for default values in register
const MAX30003_CNFG_GEN_VALS CNFGGEN_VALS_DEFAULT = {
	//.en_ulp_lon = ENULPLON_ENABLED,
	.en_ecg = ENECG_ENABLED,
	.en_dcloff = ENDCLOFF_DISABLED
};
const MAX30003_CNFG_ECG_VALS CNFECG_VALS_DEFAULT = {
	.dhpf = DHPF_HALF,
	.dlpf = DLPF_40_HZ,
	.gain = GAIN_20_V,
	.rate = RATE_MIN_SPS
};
const MAX30003_EN_INT_VALS EN_INT_VALS_DEFAULT = {
	.en_eint = ENINT_ENABLED,
	.intb_type = INTBTYPE_NMOS_WITH_PU
};
const MAX30003_EN_INT_VALS EN_INT2_VALS_DEFAULT = {
	.en_lonint = ENLONINT_ENABLED,
	.intb_type = INTBTYPE_NMOS_WITH_PU
};
const MAX30003_MNGR_INT_VALS MNGR_INT_VALS_DEFAULT = {
	.efit = EFIT_AS_24
};
const MAX30003_MNGR_DYN_VALS MNGR_DYN_VALS_DEFAULT = {
	.fast = FAST_NORMAL

};
const MAX30003_CNFG_CAL_VALS  CNFG_CALS_VALS_DEFAULT = {
	.en_vcal = ENVCAL_DISABLED
};
const MAX30003_CNFG_EMUX_VALS CNFG_EMUX_VALS_DEFAULT = {
	.pol = POL_NON_INVERTED
};
const MAX30003_CNFG_RTOR1_VALS CNFG_RTOR1_VALS_DEFAULT = {
	.en_rtor = ENRTOR_DISABLED
};





//constant of masks in each register
const MAX30003_CNFG_ECG_MASKS CNFG_ECG_DEFAULT_MASK = CNFGECG_DLPF|CNFGECG_DHPF|CNFGECG_GAIN|CNFGECG_RATE;
const MAX30003_MNGR_INT_MASKS MNGR_INT_DEFAULT_MASK = MNGRINT_EFIT;
const MAX30003_EN_INT_MASKS EN_INT_DEFAULT_MASK = ENINT_INTB_TYPE|ENINT_EN_EINT;
const MAX30003_EN_INT_MASKS EN_INT2_DEFAULT_MASK = ENINT_INTB_TYPE|ENINT_EN_LONINT;
const MAX30003_CNFG_GEN_MASKS CNFG_GEN_DEFAULT_MASK = CNFGGEN_EN_ECG;

void MAX30003_INIT_TEST();
bool MAX30003_INIT_TEST_ROUND();
bool MAX30003_CHECK_INIT_VALS_ROUND();
void MAX30003_INIT_SETUP();
void MAX30003_TEST_TRANS_RATE();
void MAX30003_TEST_GAIN();
void MAX30003_TEST_Fre();
void MAX30003_TEST_HELLO_WORLD();
void MAX30003_FLAG_TEST();
void MAX30003_FIFO_TEST();
	